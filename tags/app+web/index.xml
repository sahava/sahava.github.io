<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>app&#43;web on Simo Ahava&#39;s blog</title>
    <link>https://www.simoahava.com/tags/app&#43;web/</link>
    <description>Recent content in app&#43;web on Simo Ahava&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 May 2020 12:43:16 +0300</lastBuildDate>
    
	<atom:link href="https://www.simoahava.com/tags/app+web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google Optimize Anti-flicker Snippet Delay Test</title>
      <link>https://www.simoahava.com/analytics/optimize-anti-flicker-snippet-delay-test/</link>
      <pubDate>Fri, 29 May 2020 12:43:16 +0300</pubDate>
      
      <guid>https://www.simoahava.com/analytics/optimize-anti-flicker-snippet-delay-test/</guid>
      <description>Recently I published an article on how to set up an impact test for the &amp;ldquo;flicker effect&amp;rdquo; omnipresent in client-side A/B-testing tools. Be sure to check out that article first to get some context to what we&#39;re going to be talking about here.
  In this short follow-up, I&#39;ll show you how to measure the average time of the anti-flicker snippet delaying page visibility, if you choose to deploy the snippet.</description>
    </item>
    
    <item>
      <title>The New cookieFlags Setting In Google Analytics</title>
      <link>https://www.simoahava.com/analytics/cookieflags-field-google-analytics/</link>
      <pubDate>Tue, 24 Mar 2020 15:24:05 +0200</pubDate>
      
      <guid>https://www.simoahava.com/analytics/cookieflags-field-google-analytics/</guid>
      <description>With the enforcement of SameSite settings in the latest versions of Google Chrome, it&#39;s become a mad scramble to get cookies working across first-party and third-party contexts. I&#39;ve covered this phenomenon before in my SameSite article, as well as in my guide for setting up cookieless tracking for iframes.
Recently, Google Analytics updated its libraries (App+Web, gtag.js, and analytics.js) with a new setting: cookieFlags (analytics.js) or cookie_flags (App+Web and gtag.js).</description>
    </item>
    
    <item>
      <title>Custom Parameter Reporting In Google Analytics: App &#43; Web</title>
      <link>https://www.simoahava.com/analytics/custom-parameter-reporting-google-analytics-app-web/</link>
      <pubDate>Thu, 07 Nov 2019 09:00:29 +0200</pubDate>
      
      <guid>https://www.simoahava.com/analytics/custom-parameter-reporting-google-analytics-app-web/</guid>
      <description>In Google Analytics: App + Web, you collect events. One event differs from another event by the name it uses. An event with the name page_view is different from, say, an event with the name file_download.
This is all run-of-the-mill stuff. You know this.
However, the fundamental change that App + Web introduces, when compared to Universal Analytics, is how event parameters are collected and processed.
  This gets more complicated than it should be.</description>
    </item>
    
    <item>
      <title>#BigQueryTips: Query Guide To Google Analytics: App &#43; Web</title>
      <link>https://www.simoahava.com/analytics/bigquery-query-guide-google-analytics-app-web/</link>
      <pubDate>Tue, 15 Oct 2019 08:00:00 +0300</pubDate>
      
      <guid>https://www.simoahava.com/analytics/bigquery-query-guide-google-analytics-app-web/</guid>
      <description>I&#39;ve thoroughly enjoyed writing short (and sometimes a bit longer) bite-sized tips for my #GTMTips topic. With the advent of Google Analytics: App + Web and particularly the opportunity to access raw data through BigQuery, I thought it was a good time to get started on a new tip topic: #BigQueryTips.
For Universal Analytics, getting access to the BigQuery export with Google Analytics 360 has been one of the major selling points for the expensive platform.</description>
    </item>
    
    <item>
      <title>Enable BigQuery Export For Google Analytics: App &#43; Web Properties</title>
      <link>https://www.simoahava.com/analytics/enable-bigquery-export-google-analytics-app-web/</link>
      <pubDate>Tue, 27 Aug 2019 13:51:29 +0300</pubDate>
      
      <guid>https://www.simoahava.com/analytics/enable-bigquery-export-google-analytics-app-web/</guid>
      <description>Here&#39;s yet another article inspired by the fairly recent release of Google Analytics: App + Web properties. This new property type surfaces Firebase&#39;s analytics capabilities for websites as well, when before they were restricted to mobile apps only (see my guides for iOS and Android).
Even though the feature set of Google Analytics for Firebase is still somewhat bare in the user interface, here&#39;s a perk which might push you over the edge and give the new measurement model a shot.</description>
    </item>
    
    <item>
      <title>iOS Quickstart With Google Analytics For Firebase And Google Tag Manager</title>
      <link>https://www.simoahava.com/analytics/ios-quickstart-google-analytics-firebase-tag-manager/</link>
      <pubDate>Wed, 21 Aug 2019 10:10:12 +0300</pubDate>
      
      <guid>https://www.simoahava.com/analytics/ios-quickstart-google-analytics-firebase-tag-manager/</guid>
      <description>A while ago, I published an article on how to build an Android application, and bundle it with Firebase. The purpose of that article, and the one you are reading now, is to slowly introduce the world of mobile app development and Firebase, given the latter is getting more and more traction as Google&#39;s go-to analytics platform.
After finishing work on the Android guide, I immediately started working on its counterpart for iOS, and that&#39;s the one you&#39;re reading now.</description>
    </item>
    
    <item>
      <title>Android Quickstart With Google Analytics For Firebase And Google Tag Manager</title>
      <link>https://www.simoahava.com/analytics/android-quickstart-google-analytics-firebase-google-tag-manager/</link>
      <pubDate>Mon, 19 Aug 2019 09:00:04 +0300</pubDate>
      
      <guid>https://www.simoahava.com/analytics/android-quickstart-google-analytics-firebase-google-tag-manager/</guid>
      <description>With the release of Google Analytics: App + Web, Firebase is suddenly all the rage. The new App + Web property can combine data from your website and mobile apps, as long as the latter uses Google Analytics for Firebase, formerly known as Firebase Analytics.
In this guide, I&#39;ll walk you through the steps of creating an extremely simple Android application, and we&#39;ll then create a Firebase project, and for good measure add Google Tag Manager to the mix.</description>
    </item>
    
    <item>
      <title>Getting Started With Google Analytics: App &#43; Web</title>
      <link>https://www.simoahava.com/analytics/getting-started-with-google-analytics-app-web/</link>
      <pubDate>Mon, 05 Aug 2019 09:07:18 +0300</pubDate>
      
      <guid>https://www.simoahava.com/analytics/getting-started-with-google-analytics-app-web/</guid>
      <description>Google recently released a new version of Google Analytics called App + Web. Clumsy name aside, this really is for all intents and purposes Google Analytics V2 or Firebase Analytics for the Web. We&#39;re not talking about a charming way to do roll-up reporting between Google Analytics for Firebase and Universal Analytics, nor are we talking about an enhancement to Universal Analytics.
  No, we&#39;re talking about a new measurement model for web traffic, which has the convenience of being compatible with Google Analytics for Firebase, which you might already have running in your apps.</description>
    </item>
    
  </channel>
</rss>