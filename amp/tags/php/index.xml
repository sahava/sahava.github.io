<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on Simo Ahava&#39;s blog</title>
    <link>https://www.simoahava.com/amp/tags/php/</link>
    <description>Recent content in php on Simo Ahava&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Oct 2019 09:00:00 +0300</lastBuildDate>
    
	<atom:link href="https://www.simoahava.com/amp/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Improve Google Analytics Bot Detection With reCAPTCHA</title>
      <link>https://www.simoahava.com/amp/analytics/improve-google-analytics-bot-detection-with-recaptcha/</link>
      <pubDate>Wed, 23 Oct 2019 09:00:00 +0300</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/improve-google-analytics-bot-detection-with-recaptcha/</guid>
      <description>There are thousands upon thousands of bots, crawlers, spiders, and other creepy-crawlies out there doing nothing but crawling through websites and harvesting the content within for whatever purposes they have been fine-tuned to. While Google Analytics provides a bot filtering feature to filter out &amp;ldquo;spam&amp;rdquo; and &amp;ldquo;bot traffic&amp;rdquo; from views, this is far from comprehensive enough to tackle all instances of bot traffic that might enter the site.
  You might have noticed bot traffic in your data even if you have bot filtering toggled on.</description>
    </item>
    
    <item>
      <title>Send Mail Upon Google Tag Manager Event</title>
      <link>https://www.simoahava.com/amp/analytics/send-mail-upon-google-tag-manager-event/</link>
      <pubDate>Mon, 28 Apr 2014 04:49:52 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/send-mail-upon-google-tag-manager-event/</guid>
      <description>Let&#39;s say you want to set up a rudimentary email alert system in your Google Tag Manager implementation. Say, for example, you want to receive an email every time an uncaught error occurs on your website. It&#39;s not a very good use case, since a large website can spawn hundreds of uncaught exceptions in a short period of time, but let&#39;s just pretend for now.
If you know your JavaScript, you&#39;ll know that you can&#39;t send mail using client-side code.</description>
    </item>
    
  </channel>
</rss>