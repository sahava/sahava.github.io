<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Client Id on Simo Ahava&#39;s blog</title>
    <link>https://www.simoahava.com/amp/tags/client-id/</link>
    <description>Recent content in Client Id on Simo Ahava&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Dec 2017 06:50:11 +0200</lastBuildDate>
    
	<atom:link href="https://www.simoahava.com/amp/tags/client-id/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Add Client ID To Custom Dimension With gtag.js</title>
      <link>https://www.simoahava.com/amp/analytics/add-clientid-to-custom-dimension-gtag-js/</link>
      <pubDate>Tue, 19 Dec 2017 06:50:11 +0200</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/add-clientid-to-custom-dimension-gtag-js/</guid>
      <description>When Google released gtag.js, the new, global tracking library designed to (eventually) replace analytics.js, many Universal Analytics practitioners and users were confused (see e.g. Jeff&amp;rsquo;s great overview here). It seemed like gtag.js wasn&amp;rsquo;t really solving any immediate problem, since analytics.js had done a bang-up job with Universal Analytics tracking for all these years. However, gtag&amp;rsquo;s modus operandi is the ability to leverage the same semantic information (distributed across dataLayer!) across a number of Google products, starting with GA and AdWords.</description>
    </item>
    
    <item>
      <title>#GTMTips: Use customTask To Access Tracker Values In Google Tag Manager</title>
      <link>https://www.simoahava.com/amp/gtm-tips/use-customtask-access-tracker-values-google-tag-manager/</link>
      <pubDate>Tue, 13 Jun 2017 08:27:38 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/gtm-tips/use-customtask-access-tracker-values-google-tag-manager/</guid>
      <description>One of the things I&amp;rsquo;ve recommended from the get-go is to always send the Client ID to Google Analytics with your users&amp;rsquo; hits. This is very useful for adding a level of granularity to your tracking. At first, I recommended using an Event tag to do this. Then I modified my approach a little so that you could send it with your initial Page View (thus not inflating your hit counts).</description>
    </item>
    
    <item>
      <title>Google Analytics Client ID In AMP Pages</title>
      <link>https://www.simoahava.com/amp/analytics/google-analytics-client-id-amp-pages/</link>
      <pubDate>Mon, 14 Nov 2016 08:59:32 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/google-analytics-client-id-amp-pages/</guid>
      <description>This article is a collaboration between Simo and Dan Wilkerson. Dan&amp;rsquo;s one of the smartest analytics developers out there, and he&amp;rsquo;s already contributed a great #GTMTips guest post. It&amp;rsquo;s great to have him back here sharing his insight on working with Accelerated Mobile Pages (AMP).
So, we&amp;rsquo;re back on AMP! Simo wrote a long, sprawling AMP for Google Tag Manager guide a while ago, and Dan has also contributed to the space with his guide for AMP and Google Analytics.</description>
    </item>
    
    <item>
      <title>Improve Data Collection With Four Custom Dimensions</title>
      <link>https://www.simoahava.com/amp/analytics/improve-data-collection-with-four-custom-dimensions/</link>
      <pubDate>Mon, 06 Apr 2015 16:36:54 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/improve-data-collection-with-four-custom-dimensions/</guid>
      <description>Since writing my rant about the schema conspiracy of web analytics platforms, I&amp;rsquo;ve been giving the whole idea of hit-level data collection a lot of thought. Sessionization is very heavily implemented in Google Analytics, which is understandable, but the regular Google Analytics API just doesn&amp;rsquo;t give you the kind of information you&amp;rsquo;d need, if you wanted to stitch hits together differently in your own backend. In fact, there are four distinct levels of aggregation that are not exposed via the API, even though I think they should:</description>
    </item>
    
  </channel>
</rss>