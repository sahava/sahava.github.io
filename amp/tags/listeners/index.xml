<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>listeners on Simo Ahava&#39;s blog</title>
    <link>https://www.simoahava.com/amp/tags/listeners/</link>
    <description>Recent content in listeners on Simo Ahava&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Aug 2014 17:36:22 +0000</lastBuildDate>
    
	<atom:link href="https://www.simoahava.com/amp/tags/listeners/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Custom Event Listeners For GTM</title>
      <link>https://www.simoahava.com/amp/analytics/custom-event-listeners-gtm/</link>
      <pubDate>Mon, 25 Aug 2014 17:36:22 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/custom-event-listeners-gtm/</guid>
      <description>(UPDATE 1 Oct 2014 Due to a change in how macros work in Debug Mode, the {{generic event handler}} macro no longer works when testing in Debug Mode. That means that you&amp;rsquo;ll have to test your custom listener in a live container (I know, ouch!). If you want to test in Debug Mode, you&amp;rsquo;ll have to skip using the {{generic event handler}} as a macro, and instead copy the inner function into the Custom HTML Tag, give the function a name, and use that as the callback in addEventListener or attachEvent.</description>
    </item>
    
    <item>
      <title>GTM Listener Firing Order Test</title>
      <link>https://www.simoahava.com/amp/analytics/gtm-listener-firing-order-test/</link>
      <pubDate>Tue, 11 Mar 2014 12:08:18 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/gtm-listener-firing-order-test/</guid>
      <description>Because I was bored, I did a quick test to sort out the firing order of competing GTM listeners. If you&amp;rsquo;ve done your homework (i.e. read my article on GTM listeners), you&amp;rsquo;ll remember that GTM listeners are set up on the document node of the document object model (DOM). I wanted to test what the firing order is if you have multiple competing listeners on the same page.
I tested with the following listeners (make sure you read up on auto-event tracking if you are completely baffled at this point):</description>
    </item>
    
    <item>
      <title>Google Tag Manager: The History Listener</title>
      <link>https://www.simoahava.com/amp/analytics/google-tag-manager-history-listener/</link>
      <pubDate>Sat, 08 Mar 2014 10:16:24 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/google-tag-manager-history-listener/</guid>
      <description>There&amp;rsquo;s a new listener in town! It&amp;rsquo;s a few days now since the Google Tag Manager team unleashed the History Listener, and the time has come for me to tell you what this baby can do.
The History Listener is designed to be used on websites where content is loaded dynamically. Typically, these websites make heavy use of AJAX (Asynchronous JavaScript and XML), which is designed for loading content in the background and serving it dynamically without having to reload the page.</description>
    </item>
    
    <item>
      <title>Why Don&#39;t My GTM Listeners Work?</title>
      <link>https://www.simoahava.com/amp/analytics/dont-gtm-listeners-work/</link>
      <pubDate>Fri, 14 Feb 2014 10:16:46 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/dont-gtm-listeners-work/</guid>
      <description>Ever so often I come across a Google Tag Manager setup where GTM&amp;rsquo;s own auto-event listeners don&amp;rsquo;t perform the task they were supposed to. Listener problems seem to be a hot topic in Google+ and the Product Forums as well.
There may be many reasons why your listeners don&amp;rsquo;t work, but a very common trend is that you have conflicting JavaScript libraries or scripts running on your page.
Let&amp;rsquo;s explore how listeners work before tackling the problem.</description>
    </item>
    
    <item>
      <title>Auto-Event Tracking In Google Tag Manager</title>
      <link>https://www.simoahava.com/amp/analytics/auto-event-tracking-google-tag-manager/</link>
      <pubDate>Wed, 02 Oct 2013 05:20:45 +0000</pubDate>
      
      <guid>https://www.simoahava.com/amp/analytics/auto-event-tracking-google-tag-manager/</guid>
      <description>There is a new version of this post for GTM V2 here.
The Google Analytics Summit came and went, and thanks to the Live Stream, everyone could participate. We were treated to a rapid-fire selection of Google Analytics&amp;rsquo; new features, and this post sheds light on one of these in particular: automated event tracking in Google Tag Manager.
Auto-event tracking introduces a nice feature, which does what tag managers ought to do: it provides functionality without HTML template editing.</description>
    </item>
    
  </channel>
</rss>